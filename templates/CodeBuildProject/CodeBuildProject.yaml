---
AWSTemplateFormatVersion: 2010-09-09
Parameters:
  ProjectName:
    Type: String

  RepoArn:
    Type: String
    Default: arn:aws:codecommit:unused::UNUSED

  RepoUrl:
    Type: String

  EnvType:
    Type: String
    Default: LINUX_CONTAINER

  EnvImage:
    Type: String

  EnvComputeType:
    Type: String
    Default: BUILD_GENERAL1_SMALL

  ArtifactBucket:
    Type: String
    Default: r.sigcorp.com

  SourceType:
    Type: String
    Default: CODECOMMIT

  BuildSpec:
    Type: String
    Default: "buildspec.yml"

  DefaultRevision:
    Type: String
    Default: "1.0-SNAPSHOT"

  CreatesDockerImage:
    Type: String
    Default: false

  ExtraEnvVar1:
    Type: String
    Default: "EXTRA_ARG_1"

  ExtraEnvVal1:
    Type: String
    Default: ""

  ExtraEnvType1:
    Type: String
    Default: PLAINTEXT

  ExtraEnvVar2:
    Type: String
    Default: "EXTRA_ARG_2"

  ExtraEnvVal2:
    Type: String
    Default: ""

  ExtraEnvType2:
    Type: String
    Default: PLAINTEXT

  ExtraEnvVar3:
    Type: String
    Default: "EXTRA_ARG_3"

  ExtraEnvVal3:
    Type: String
    Default: ""

  ExtraEnvType3:
    Type: String
    Default: PLAINTEXT

  ExtraEnvVar4:
    Type: String
    Default: "EXTRA_ARG_4"

  ExtraEnvVal4:
    Type: String
    Default: ""

  ExtraEnvType4:
    Type: String
    Default: PLAINTEXT

  ExtraEnvVar5:
    Type: String
    Default: "EXTRA_ARG_5"

  ExtraEnvVal5:
    Type: String
    Default: ""

  ExtraEnvType5:
    Type: String
    Default: PLAINTEXT

  ExtraEnvVar6:
    Type: String
    Default: "EXTRA_ARG_6"

  ExtraEnvVal6:
    Type: String
    Default: ""

  ExtraEnvType6:
    Type: String
    Default: PLAINTEXT

Conditions:
  CreateEcsResources: !Equals [ !Ref CreatesDockerImage, true ]
  ExtraEnvSecMan1: !Equals [ !Ref ExtraEnvType1, SECRETS_MANAGER ]
  ExtraEnvSecMan2: !Equals [ !Ref ExtraEnvType2, SECRETS_MANAGER ]
  ExtraEnvSecMan3: !Equals [ !Ref ExtraEnvType3, SECRETS_MANAGER ]
  ExtraEnvSecMan4: !Equals [ !Ref ExtraEnvType4, SECRETS_MANAGER ]
  ExtraEnvSecMan5: !Equals [ !Ref ExtraEnvType5, SECRETS_MANAGER ]
  ExtraEnvSecMan6: !Equals [ !Ref ExtraEnvType6, SECRETS_MANAGER ]

Resources:
  CodeBuildLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: !Sub "/aws/codebuild/${ProjectName}"

  CodeBuildServiceRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - !GetAtt CodeBuildLogGroup.Arn
                  - !Sub "${CodeBuildLogGroup.Arn}:*"
              - Effect: Allow
                Action:
                  - "s3:PutObject"
                  - "s3:GetObject"
                  - "s3:DeleteObject"
                  - "s3:GetObjectVersion"
                  - "s3:ListBucket*"
                Resource:
                  - !Sub "arn:aws:s3:::${ArtifactBucket}/*"
                  - !Sub "arn:aws:s3:::${ArtifactBucket}"
              - Effect: Allow
                Action:
                  - "codecommit:GitPull"
                  - "codecommit:GitPush"
                Resource:
                  - !Ref RepoArn
              - Effect: Allow
                Action:
                  - "lambda:UpdateFunctionCode"
                Resource: [ '*' ]

  SecretsManagerPolicy1:
    Condition: ExtraEnvSecMan1
    Type: AWS::IAM::Policy
    Properties:
      Roles: [ !Ref CodeBuildServiceRole ]
      PolicyName: SecretsManagerForExtraEnv1
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - "secretsmanager:GetSecretValue"
            Resource:
              - !Ref ExtraEnvVal1

  SecretsManagerPolicy2:
    Condition: ExtraEnvSecMan2
    Type: AWS::IAM::Policy
    Properties:
      Roles: [ !Ref CodeBuildServiceRole ]
      PolicyName: SecretsManagerForExtraEnv2
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - "secretsmanager:GetSecretValue"
            Resource:
              - !Ref ExtraEnvVal2

  SecretsManagerPolicy3:
    Condition: ExtraEnvSecMan3
    Type: AWS::IAM::Policy
    Properties:
      Roles: [ !Ref CodeBuildServiceRole ]
      PolicyName: SecretsManagerForExtraEnv3
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - "secretsmanager:GetSecretValue"
            Resource:
              - !Ref ExtraEnvVal3

  SecretsManagerPolicy4:
    Condition: ExtraEnvSecMan4
    Type: AWS::IAM::Policy
    Properties:
      Roles: [ !Ref CodeBuildServiceRole ]
      PolicyName: SecretsManagerForExtraEnv4
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - "secretsmanager:GetSecretValue"
            Resource:
              - !Ref ExtraEnvVal4

  SecretsManagerPolicy5:
    Condition: ExtraEnvSecMan5
    Type: AWS::IAM::Policy
    Properties:
      Roles: [ !Ref CodeBuildServiceRole ]
      PolicyName: SecretsManagerForExtraEnv5
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - "secretsmanager:GetSecretValue"
            Resource:
              - !Ref ExtraEnvVal5

  SecretsManagerPolicy6:
    Condition: ExtraEnvSecMan6
    Type: AWS::IAM::Policy
    Properties:
      Roles: [ !Ref CodeBuildServiceRole ]
      PolicyName: SecretsManagerForExtraEnv6
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - "secretsmanager:GetSecretValue"
            Resource:
              - !Ref ExtraEnvVal6

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref ProjectName
      Artifacts:
        Type: S3
        Location: !Ref ArtifactBucket
        Name: !Ref ProjectName
        NamespaceType: NONE
        Packaging: NONE
        EncryptionDisabled: true
      Environment:
        Type: !Ref EnvType
        ComputeType: !Ref EnvComputeType
        Image: !Ref EnvImage
        PrivilegedMode: !Ref CreatesDockerImage
        EnvironmentVariables:
          - Name: REVISION
            Value: !Ref DefaultRevision
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: IMAGE_REPO_NAME
            Value: !Ref ProjectName
          - Name: !Ref ExtraEnvVar1
            Value: !Ref ExtraEnvVal1
            Type: !Ref ExtraEnvType1
          - Name: !Ref ExtraEnvVar2
            Value: !Ref ExtraEnvVal2
            Type: !Ref ExtraEnvType2
          - Name: !Ref ExtraEnvVar3
            Value: !Ref ExtraEnvVal3
            Type: !Ref ExtraEnvType3
          - Name: !Ref ExtraEnvVar4
            Value: !Ref ExtraEnvVal4
            Type: !Ref ExtraEnvType4
          - Name: !Ref ExtraEnvVar5
            Value: !Ref ExtraEnvVal5
            Type: !Ref ExtraEnvType5
          - Name: !Ref ExtraEnvVar6
            Value: !Ref ExtraEnvVal6
            Type: !Ref ExtraEnvType6
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Location: !Ref RepoUrl
        Type: !Ref SourceType
        BuildSpec: !Ref BuildSpec
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName

  EcsRepo:
    Type: AWS::ECR::Repository
    Condition: CreateEcsResources
    Properties:
      RepositoryName: !Ref ProjectName
      RepositoryPolicyText:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowPushPull
            Effect: Allow
            Principal:
              AWS:
                - !GetAtt CodeBuildServiceRole.Arn
            Action:
              - "ecr:PutImage"
              - "ecr:InitiateLayerUpload"
              - "ecr:UploadLayerPart"
              - "ecr:CompleteLayerUpload"

  EcsPolicy:
    Type: AWS::IAM::Policy
    Condition: CreateEcsResources
    Properties:
      Roles:
        - !Ref CodeBuildServiceRole
      PolicyName: !Sub "${AWS::StackName}_EcsPolicy"
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - "ecr:GetAuthorizationToken"

              # Allow read-only operations on all repositories so that the
              # build can fetch it's dependencies (if any).
              - "ecr:GetDownloadUrlForLayer"
              - "ecr:BatchGetImage"
              - "ecr:BatchCheckLayerAvailability"
            Resource:
              - "*"
