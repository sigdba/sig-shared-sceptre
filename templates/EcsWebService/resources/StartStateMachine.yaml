---
# TODO: Add a bogus rule which associates the real TG with the LB so that we can
#       wait for health checks before restoring the real rule.
Comment: A description of my state machine
StartAt: GetCurrentDesiredCount
States:
  GetCurrentDesiredCount:
    Type: Task
    Parameters:
      Cluster: {Ref: ClusterArn}
      Services:
      - Ref: Service
    Resource: arn:aws:states:::aws-sdk:ecs:describeServices
    Next: CheckServiceCount
    OutputPath: "$.Services[0].DesiredCount"

  CheckServiceCount:
    Type: Choice
    Choices:
    - Variable: "$"
      NumericLessThan: 1
      Comment: ServiceCountLow
      Next: SetDesiredCount
    Default: DescribeService

  DescribeService:
    Type: Task
    Parameters:
      Cluster: {Ref: ClusterArn}
      Services:
      - Ref: Service
    Resource: arn:aws:states:::aws-sdk:ecs:describeServices
    Next: LoopOverTargetGroups

  LoopOverTargetGroups:
    Type: Map
    Next: RuleData
    ItemsPath: "$.Services[0].LoadBalancers"
    Iterator:
      StartAt: GetTgHealth
      States:
        GetTgHealth:
          Type: Task
          Parameters:
            TargetGroupArn.$: "$.TargetGroupArn"
          Resource: arn:aws:states:::aws-sdk:elasticloadbalancingv2:describeTargetHealth
          Next: TargetHasHealthy?
          ResultPath: "$.Result"
          ResultSelector:
            "healthy.$": "$.TargetHealthDescriptions[?(@.TargetHealth.State=='healthy')]"

        TargetHasHealthy?:
          Type: Choice
          Choices:
          - Variable: '$.Result.healthy[0]'
            IsPresent: true
            Comment: TargetPresent
            Next: DoneWaitingForTarget
          Default: WaitForTarget

        WaitForTarget:
          Type: Wait
          Seconds: 5
          Next: GetTgHealth

        DoneWaitingForTarget:
          Type: Pass
          End: true

  SetDesiredCount:
    Type: Task
    Parameters:
      Cluster: {Ref: ClusterArn}
      Service: {Ref: Service}
      DesiredCount: 1
    Resource: arn:aws:states:::aws-sdk:ecs:updateService
    Next: DescribeService

  RuleData:
    Type: Pass
    Next: RestoreConditions
    Result: {}

  RestoreConditions:
    ItemsPath: "$.rules"
    Iterator:
      StartAt: ModifyRule
      States:
        ModifyRule:
          End: true
          Parameters:
            Conditions.$: "$.conditions"
            RuleArn.$: "$.arn"
          Resource: arn:aws:states:::aws-sdk:elasticloadbalancingv2:modifyRule
          Type: Task
    Next: WaitBeforeEnablingRule
    Type: Map

  WaitBeforeEnablingRule:
    Type: Wait
    Seconds: 300
    Next: EnableRule

  EnableRule:
    Type: Task
    End: true
    Parameters:
      Name: { Ref: AutoStopScheduleRule }
    Resource: arn:aws:states:::aws-sdk:eventbridge:enableRule
