---
- Outputs:
    EcsServiceArn:
      Value:
        Ref: Service
  Parameters:
    ClusterArn:
      Description: The ARN or name of the ECS cluster
      Type: String
    DesiredCount:
      Default: '1'
      Description: The desired number of instances of this service
      Type: Number
    ListenerArn:
      Description: The ARN of the ELB listener which will be used by this service
      Type: String
    MaximumPercent:
      Default: '200'
      Description: The maximum percent of `DesiredCount` allowed to be running during
        updates.
      Type: Number
    MinimumHealthyPercent:
      Default: '100'
      Description: The minimum number of running instances of this service to keep
        running during an update.
      Type: Number
    VpcId:
      Description: The ID of the VPC of the ECS cluster
      Type: String
  Resources:
    ListenerRule7155:
      Properties:
        Actions:
        - TargetGroupArn:
            Ref: TargetGroupFORSLASH
          Type: forward
        Conditions:
        - Field: host-header
          HostHeaderConfig:
            Values:
            - login.*
        ListenerArn:
          Ref: ListenerArn
        Priority: 7155
      Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Service:
      DependsOn:
      - ListenerRule7155
      Properties:
        Cluster:
          Ref: ClusterArn
        DeploymentConfiguration:
          MaximumPercent:
            Ref: MaximumPercent
          MinimumHealthyPercent:
            Ref: MinimumHealthyPercent
        DesiredCount:
          Ref: DesiredCount
        LoadBalancers:
        - ContainerName: main
          ContainerPort: 8443
          TargetGroupArn:
            Ref: TargetGroupFORSLASH
        PlacementStrategies:
        - Field: memory
          Type: binpack
        Tags:
        - Key: baggy.link.category
          Value: Admin
        - Key: baggy.link.title
          Value: CAS
        - Key: baggy.link.url
          Value: https://login.ban.school.edu/cas
        TaskDefinition:
          Ref: TaskDef
      Type: AWS::ECS::Service
    TargetGroupFORSLASH:
      Properties:
        HealthCheckIntervalSeconds: 60
        HealthCheckPath: /cas/
        HealthCheckProtocol: HTTPS
        HealthCheckTimeoutSeconds: 30
        Matcher:
          HttpCode: 200-399
        Port: 8080
        Protocol: HTTPS
        Tags:
        - Key: Name
          Value:
            Fn::Sub: '${AWS::StackName}: /'
        TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: 'false'
        - Key: deregistration_delay.timeout_seconds
          Value: '0'
        - Key: stickiness.type
          Value: lb_cookie
        TargetType: instance
        UnhealthyThresholdCount: 5
        VpcId:
          Ref: VpcId
      Type: AWS::ElasticLoadBalancingV2::TargetGroup
    TaskDef:
      Properties:
        ContainerDefinitions:
        - Environment:
          - Name: AWS_DEFAULT_REGION
            Value:
              Ref: AWS::Region
          - Name: evs_1
            Value: override1
          - Name: evs_2
            Value: value_2
          - Name: something
            Value: else
          - Name: another
            Value: value
          Essential: true
          Hostname:
            Ref: AWS::StackName
          Image: sigcorp/cas:6.4.5-jdk11-ldap-jsonsvc-support-saml
          Links: []
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-create-group: true
              awslogs-group:
                Fn::Sub: /ecs/${AWS::StackName}
              awslogs-region:
                Ref: AWS::Region
              awslogs-stream-prefix: ecs
          Memory: 2048
          MemoryReservation: 2048
          MountPoints:
          - ContainerPath: /cas_service_json
            ReadOnly: false
            SourceVolume: json_services
          Name: main
          PortMappings:
          - ContainerPort: 8443
          Secrets:
          - Name: evs_3
            ValueFrom: override3
          - Name: evs_4
            ValueFrom: value_4
          - Name: something
            ValueFrom: wild
        ExecutionRoleArn:
          Ref: TaskExecutionRole
        Family:
          Ref: AWS::StackName
        Volumes:
        - EFSVolumeConfiguration:
            FilesystemId: fs-12345
            RootDirectory: /cas_service_json
          Name: json_services
      Type: AWS::ECS::TaskDefinition
    TaskExecutionRole:
      Properties:
        AssumeRolePolicyDocument:
          Statement:
          - Action:
            - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
              - ecs-tasks.amazonaws.com
          Version: '2012-10-17'
        ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
        Policies:
        - PolicyDocument:
            Statement:
            - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              - logs:DescribeLogStreams
              Effect: Allow
              Resource:
              - arn:aws:logs:*:*:*
            Version: '2012-10-17'
          PolicyName: root
        - PolicyDocument:
            Statement:
            - Action: ssm:GetParameters
              Effect: Allow
              Resource:
                Fn::Sub: arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/override3
            - Action: ssm:GetParameters
              Effect: Allow
              Resource:
                Fn::Sub: arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/value_4
            - Action: ssm:GetParameters
              Effect: Allow
              Resource:
                Fn::Sub: arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/wild
            Version: '2012-10-17'
          PolicyName: secrets
      Type: AWS::IAM::Role

